package OfferHeading_String;

public class offerheading_42_2 {
	/*
	 * 左旋转字符串
	 * 汇编语言中有一种移位指令叫做循环左移（ROL），现在有个简单的任务，
	 * 就是用字符串模拟这个指令的运算结果。对于一个给定的字符序列S，
	 * 请你把其循环左移K位后的序列输出。例如，字符序列S=”abcXYZdef”,
	 * 要求输出循环左移3位后的结果，即“XYZdefabc”。是不是很简单？OK，
	 * 搞定它！
	 * 
	 * 思路
		，字符序列S=”abcXYZdef”,要求输出循环左移3位后的结果，
		即“XYZdefabc”。 剑指offer思路，先反转整个字符串，就是fedZYXcba,
		然后反转前6位XYZdef再反转后三位abc。那么就是XYZdefabc。
	 */
	public static String LeftRotateString(String str, int n){
		if(str == null || str == ""){
			return str;
		}
		n = n % str.length();
		char[] strArray = str.toCharArray();
		reverse(strArray, 0, strArray.length-1);
		reverse(strArray, 0, strArray.length-n-1);
		reverse(strArray, strArray.length-n, strArray.length-1);
		return String.valueOf(strArray);
	}
	public static void reverse(char[] str, int begin, int end){
		while(begin < end){
			char temp = str[begin];
			str[begin] = str[end];
			str[end] = temp;
			begin++;
			end--;
		}
	}
	public static void main(String[] args) {
		String str = "abcXYZdef";
		int n = 3;
		System.out.println("Before: "+str);
		System.out.println("After: "+LeftRotateString(str, n));
	}

}
